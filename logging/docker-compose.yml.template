version: '${COMPOSE_FILE_VERSION}'

networks:
  logging_net:
    external: true
    name: ${APP_NETWORK_NAME}

configs:
  kibana_config:
    file: ./kibana/kibana.yml
  logstash_config:
    file: ./logstash/logstash.yml
  logstash_pipeline:
    file: ./logstash/logstash.conf
  nginx_config:
    file: ./nginx/nginx.conf
  htpasswd_users:
    file: ./nginx/htpasswd.users

volumes:
  es01_data: {}

services:
  es01:
    image: ${DOCKER_REGISTRY}/${PROJECT_NAME}/${ES_IMAGE_NAME}:${ES_IMAGE_TAG}
    environment:
      - discovery.type=single-node
      - logger.level=INFO
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
    volumes:
      - es01_data:/usr/share/elasticsearch/data
    networks:
      - logging_net
    ports:
      - 9200:9200
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.logging == yes
      resources:
        limits:
          cpus: '2'
          memory: 2048M
        reservations:
          cpus: '1'
          memory: 1024M

  kibana:
    image: ${DOCKER_REGISTRY}/${PROJECT_NAME}/${KIBANA_IMAGE_NAME}:${KIBANA_IMAGE_TAG}
    networks:
      - logging_net
    configs:
      - source: kibana_config
        target: /usr/share/kibana/config/kibana.yml
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: '1'
          memory: 1024M
        reservations:
          cpus: '0.5'
          memory: 512M

  logstash:
    image: ${DOCKER_REGISTRY}/${PROJECT_NAME}/${LOGSTASH_IMAGE_NAME}:${LOGSTASH_IMAGE_TAG}
    networks:
      - logging_net
    ports:
      - 15000:5000
    configs:
      - source: logstash_config
        target: /usr/share/logstash/config/logstash.yml
      - source: logstash_pipeline
        target: /usr/share/logstash/pipeline/logstash.conf
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: '1'
          memory: 1024M
        reservations:
          cpus: '0.5'
          memory: 512M

  logspout:
    image: ${DOCKER_REGISTRY}/${PROJECT_NAME}/${LOGSPOUT_IMAGE_NAME}:${LOGSPOUT_IMAGE_TAG}
    networks:
      - logging_net
    environment:
      - ROUTE_URIS=logstash://logstash:5000
      - DOCKER_LABELS=true
      - LOGSTASH_FIELDS=environment=${NODE_ENV}
    volumes:
      - /etc/hostname:/etc/host_hostname:ro
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      mode: global
      resources:
        limits:
          cpus: '0.2'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
        
  nginx:
    image: ${DOCKER_REGISTRY}/${PROJECT_NAME}/${NGINX_IMAGE_NAME}:${NGINX_IMAGE_TAG}
    networks:
      - logging_net
    ports:
      - 5601:80
    configs:
      - source: nginx_config
        target: /etc/nginx/conf.d/default.conf
      - source: htpasswd_users
        target: /etc/nginx/conf.d/htpasswd.users
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: '0.2'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
